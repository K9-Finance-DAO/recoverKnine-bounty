/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { FalseReturnERC20, FalseReturnERC20Interface } from "../../mocks/FalseReturnERC20.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "mint",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040526040518060400160405280600881526020017f46616c73655265740000000000000000000000000000000000000000000000008152505f908161004791906102f6565b506040518060400160405280600481526020017f46524554000000000000000000000000000000000000000000000000000000008152506001908161008c91906102f6565b50601260025f6101000a81548160ff021916908360ff1602179055503480156100b3575f5ffd5b506103c5565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061013457607f821691505b602082108103610147576101466100f0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101a97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261016e565b6101b3868361016e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101f76101f26101ed846101cb565b6101d4565b6101cb565b9050919050565b5f819050919050565b610210836101dd565b61022461021c826101fe565b84845461017a565b825550505050565b5f5f905090565b61023b61022c565b610246818484610207565b505050565b5b818110156102695761025e5f82610233565b60018101905061024c565b5050565b601f8211156102ae5761027f8161014d565b6102888461015f565b81016020851015610297578190505b6102ab6102a38561015f565b83018261024b565b50505b505050565b5f82821c905092915050565b5f6102ce5f19846008026102b3565b1980831691505092915050565b5f6102e683836102bf565b9150826002028217905092915050565b6102ff826100b9565b67ffffffffffffffff811115610318576103176100c3565b5b610322825461011d565b61032d82828561026d565b5f60209050601f83116001811461035e575f841561034c578287015190505b61035685826102db565b8655506103bd565b601f19841661036c8661014d565b5f5b828110156103935784890151825560018201915060208501945060208101905061036e565b868310156103b057848901516103ac601f8916826102bf565b8355505b6001600288020188555050505b505050505050565b61086c806103d25f395ff3fe608060405234801561000f575f5ffd5b5060043610610086575f3560e01c806340c10f191161005957806340c10f191461012657806370a082311461014257806395d89b4114610172578063dd62ed3e1461019057610086565b806306fdde031461008a578063095ea7b3146100a857806323b872dd146100d8578063313ce56714610108575b5f5ffd5b6100926101c0565b60405161009f9190610542565b60405180910390f35b6100c260048036038101906100bd91906105f3565b61024b565b6040516100cf919061064b565b60405180910390f35b6100f260048036038101906100ed9190610664565b610338565b6040516100ff919061064b565b60405180910390f35b610110610343565b60405161011d91906106cf565b60405180910390f35b610140600480360381019061013b91906105f3565b610355565b005b61015c600480360381019061015791906106e8565b610411565b6040516101699190610722565b60405180910390f35b61017a610426565b6040516101879190610542565b60405180910390f35b6101aa60048036038101906101a5919061073b565b6104b2565b6040516101b79190610722565b60405180910390f35b5f80546101cc906107a6565b80601f01602080910402602001604051908101604052809291908181526020018280546101f8906107a6565b80156102435780601f1061021a57610100808354040283529160200191610243565b820191905f5260205f20905b81548152906001019060200180831161022657829003601f168201915b505050505081565b5f8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103269190610722565b60405180910390a36001905092915050565b5f5f90509392505050565b60025f9054906101000a900460ff1681565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103a19190610803565b925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104059190610722565b60405180910390a35050565b6003602052805f5260405f205f915090505481565b60018054610433906107a6565b80601f016020809104026020016040519081016040528092919081815260200182805461045f906107a6565b80156104aa5780601f10610481576101008083540402835291602001916104aa565b820191905f5260205f20905b81548152906001019060200180831161048d57829003601f168201915b505050505081565b6004602052815f5260405f20602052805f5260405f205f91509150505481565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610514826104d2565b61051e81856104dc565b935061052e8185602086016104ec565b610537816104fa565b840191505092915050565b5f6020820190508181035f83015261055a818461050a565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61058f82610566565b9050919050565b61059f81610585565b81146105a9575f5ffd5b50565b5f813590506105ba81610596565b92915050565b5f819050919050565b6105d2816105c0565b81146105dc575f5ffd5b50565b5f813590506105ed816105c9565b92915050565b5f5f6040838503121561060957610608610562565b5b5f610616858286016105ac565b9250506020610627858286016105df565b9150509250929050565b5f8115159050919050565b61064581610631565b82525050565b5f60208201905061065e5f83018461063c565b92915050565b5f5f5f6060848603121561067b5761067a610562565b5b5f610688868287016105ac565b9350506020610699868287016105ac565b92505060406106aa868287016105df565b9150509250925092565b5f60ff82169050919050565b6106c9816106b4565b82525050565b5f6020820190506106e25f8301846106c0565b92915050565b5f602082840312156106fd576106fc610562565b5b5f61070a848285016105ac565b91505092915050565b61071c816105c0565b82525050565b5f6020820190506107355f830184610713565b92915050565b5f5f6040838503121561075157610750610562565b5b5f61075e858286016105ac565b925050602061076f858286016105ac565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107bd57607f821691505b6020821081036107d0576107cf610779565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61080d826105c0565b9150610818836105c0565b92508282019050808211156108305761082f6107d6565b5b9291505056fea26469706673582212204bf311d553c314869282cf2507c24419270ee3e4d850f2b37ed3f55731bd5f5564736f6c634300081c0033";

  
      type FalseReturnERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: FalseReturnERC20ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class FalseReturnERC20__factory extends ContractFactory {
    
      constructor(...args: FalseReturnERC20ConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<FalseReturnERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): FalseReturnERC20__factory {
      return super.connect(runner) as FalseReturnERC20__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): FalseReturnERC20Interface {
      return new Interface(_abi) as FalseReturnERC20Interface;
    }
    
    override attach(address: string | Addressable): FalseReturnERC20 {
      return super.attach(address) as FalseReturnERC20;
    }
  static connect(address: string, runner?: ContractRunner | null): FalseReturnERC20 {
      return new Contract(address, _abi, runner) as unknown as FalseReturnERC20;
    }
  }

  
  